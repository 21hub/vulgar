// # Typography

// ## Typography variables

// Store font weights semantically within a Sass map
$font-weights : (
  'thin' : 100,
  'light' : 300,
  'normal' : 400,
  'medium' : 500,
  'bold' : 700,
  'ubold' : 900
);

// Store font stacks semantically within a Sass map
$font-stacks : (

  'primary' : #{'Roboto', 'Helvetica Neue', sans-serif},

  'secondary' : #{Pacifico, cursive, sans-serif},

  'code' : #{'source code pro', monospace}
);

// Define a modular type scale
// Map keys represent the power of the ratio
// This map contains values mapped to a scale of `1.333`
// otherwise known as a `Perfect Third`.
// Reference : https://scotch.io/tutorials/aesthetic-sass-3-typography-and-vertical-rhythm
$type-scale : (
  -6 : .179rem,
  -5 : .238rem,
  -4 : .317rem,
  -3 : .422rem,
  -2 : .563rem,
  -1 : .75rem, // small text
   0 : 1rem, // body text
   1 : 1.333rem, // large text
   2 : 1.777rem, // main heading
   3 : 2.369rem,
   4 : 3.157rem,
   5 : 4.208rem
);

$base-font-family: font-stack('primary');

$font-size-base: type-scale(0);
$font-size-large: type-scale(1);
$font-size-small: type-scale(-1);

$font-size-h1: type-scale(3);
$font-size-h2: type-scale(2);
$font-size-h3: type-scale(1);
$font-size-h4: type-scale(0);
$font-size-h5: type-scale(-1);
$font-size-h6: type-scale(-2);

// Determine the base line height which is a ratio multiplied
// by the base font size.
$line-height-base : $font-size-base * 1.33;

// Use a multiple of the base line height for each font size, typically
// closer to—but larger than—the font size.
$line-heights: (
  -4 : ($line-height-base / 4),
  -3 : ($line-height-base / 2),
  -2 : ($line-height-base / 2),
  -1 : $line-height-base,
   0 : $line-height-base,
   1 : $line-height-base * 2,
   2 : $line-height-base * 2,
   3 : $line-height-base * 4,
   4 : $line-height-base * 4
);

// By default, this inherits from `<body>`
$headings-fonts-family: inherit;
$headings-font-weight: font-weight('medium');
$headings-line-height: line-height(1);
$headings-color: inherit;
$headings-small-color: inherit;

$lead-breakpoint: 'sm';

// Horizontal offset for forms and lists
$component-offset-horizontal: 11.333rem;

// ** Text muted color
$text-muted: brand-color('primary', 'base', 'dark');
// ** Abbreviations and acronyms border color
$abbr-border-color: $text-muted;
// ** Headings small color
$headings-small-color: $text-muted;
// ** Blockquote small color
$blockquote-small-color: $text-muted;
// ** Blockquote font size
$blockquote-font-size: type-scale(1);
// ** Blockquote border color
$blockquote-border: type-scale(-4) solid brand-color('primary', 'base', .9);
// ** Page header border
$page-header-border: $base-unit solid brand-color('primary', 'base', .9);
// ** Width of horizontal description list titles
$dl-horizontal-offset: $component-offset-horizontal;
// ** Point at while `.dl-horizontal` becomes horizontal
$dl-horizontal-breakpoint: 'sm';
// ** Horizontal line color
$hr-border: brand-color('primary', 'base', .9);

// ## Headings
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  color: $headings-color;
  font-family: $headings-fonts-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;

  small,
  .small {
    color: $headings-small-color;
    font-weight: font-weight('normal');
    line-height: line-height(0);
  }
}

h1,
h2,
h3,
.h1,
.h2,
.h3 {
  margin-bottom: line-height(-2);
  margin-top: line-height(0);

  small,
  .small {
    font-size: type-scale(-2);
  }
}

h4,
h5,
h6,
.h4,
.h5,
.h6 {
  margin-bottom: line-height(-2);
  margin-top: line-height(-2);

  small,
  .small {
    font-size: type-scale(-1);
  }
}

h1,
.h1 { font-size: $font-size-h1; }

h2,
.h2 { font-size: $font-size-h2; }

h3,
.h3 { font-size: $font-size-h3; }

h4,
.h4 { font-size: $font-size-h4; }

h5,
.h5 { font-size: $font-size-h5; }

h6,
.h6 { font-size: $font-size-h6; }

// ## Body
p {
  margin: 0 0 line-height(-2);
}

.lead {
  font-size: type-scale(1);
  font-weight: font-weight('light');
  line-height: line-height(0);
  margin-bottom: line-height(0);

  @include break($lead-breakpoint) {
    font-size: type-scale(2);
  }
}

// ## Emphasis & Miscellaneous
small,
.small {
  font-size: floor((100% * $font-size-small / $font-size-base));
}

mark,
.mark {
  background-color: brand-color('warning', 'light');
  padding: type-scale(-5);
}

// ### Alignment
%text-left { text-align: left; }
%text-right { text-align: right; }
%text-center { text-align: center; }
%text-justify { text-align: justify; }
%text-nowrap { white-space: nowrap; }

// ** Export alignment selectors
.text-left { @extend %text-left; }
.text-right { @extend %text-right; }
.text-center { @extend %text-center; }
.text-justify { @extend %text-justify; }
.text-nowrap { @extend %text-nowrap; }

// ### Transformation
%text-lowercase { text-transform: lowercase; }
%text-uppercase { text-transform: uppercase; }
%text-capitalize { text-transform: capitalize; }

// ** Export transformation selectors
.text-lowercase { @extend %text-lowercase; }
.text-uppercase { @extend %text-uppercase; }
.text-capitalize { @extend %text-capitalize; }

// ## Page Header
.page-header {
  border-bottom: $page-header-border;
  margin: line-height(2) $margin-zero line-height(0);
  padding-bottom: (line-height(-2) - 1);
}

// ## Lists

// ### Unordered and Ordered Lists
ul,
ol {
  margin-bottom: line-height(-2);
  margin-top: $margin-zero;

  ul,
  ol {
    margin-bottom: $margin-zero;
  }
}

// * List Options

// Unstyled keeps list items block level, just
// removes default browser padding and list-style
%list-unstyled {
  list-style: none;
  padding-left: $padding-zero;
}

.list-unstyled {
  @extend %list-unstyled;
}

// Inline turns list items into inline-block
.list-inline {

  @extend %list-unstyled;

  margin-left: type-scale(-4);

  > li {
    display: inline-block;
    padding-left: type-scale(-4);
    padding-right: type-scale(-4);
  }
}

// ### Description Lists
dl {
  margin-bottom: line-height(0);
  margin-top: $margin-zero;
}

dt,
dd {
  line-height: line-height(0);
}

dt {
  font-weight: font-weight('bold');
}

dd {
  // Undo browser default
  margin-left: $margin-zero;
}

// ### Horizontal Description Lists
// Defaults to being stacked without any of the below styles
// applied until the grid breakpoint is reached
.dl-horizontal {

  @include break($dl-horizontal-breakpoint) {
    font-size: type-scale(2);

    dt {

      @include text-overflow();

      clear: left;
      float: left;
      text-align: right;
      width: ($dl-horizontal-offset - 33);
    }

    dd {
      margin-left: $dl-horizontal-offset;
    }
  }

  dd {
    @include clearfix();
  }
}

// ### Miscellaneous

.initialism {

  @extend %text-uppercase;

  font-size: 90%;
}

// ** Blockquotes
blockquote {
  border-left: $blockquote-border;
  font-size: $blockquote-font-size;
  margin: $margin-zero $margin-zero line-height(0);
  padding: line-height(-2) line-height(0);

  p,
  ul,
  ol {
    &:last-child {
      margin-bottom: $margin-zero;
    }
  }

  footer {

    color: $blockquote-small-color;
    display: block;
    font-size: type-scale(-1);
    line-height: line-height(0);

    &:before {
      content: '\2014 \00A0'; // em dash, nbsp
    }
  }
}

// ** Opposite alignment of blockquote
.blockquote-reverse {

  @extend %text-right;

  border-left: 0;
  border-right: $blockquote-border;
  padding-left: $padding-zero;
  padding-right: type-scale(0);

  // Account for citation
  footer {

    &:before {
      content: '';
    }

    &:after {
      content: '\00A0 \2014'; // nbsp, em dash
    }
  }
}

// ** Addresses
address {
  font-style: normal;
  line-height: line-height(0);
  margin-bottom: line-height(0);
}

// ## Component Typography Variables

// ### Jumbotron
$jumbotron-font-size: type-scale(1);
$jumbotron-heading-font-size: type-scale(4);
