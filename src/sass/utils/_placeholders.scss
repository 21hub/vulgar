// # Structure

// the CSS component layout/structure, excluding any non-layout
// rules, such as color

%button {
  border-style: solid;
  border-width: $button-border-width;
  display: inline-block;
  font-size: type-scale(-1);                // utility function
  font-weight: bold;
  padding: $button-padding;
  text-transform: uppercase;
}

// ## Panels
// * base components
%panel {
  background-color: $panel-bg;
  border: $panel-border;
  border-radius: $panel-border-radius;
  box-shadow: $panel-box-shadow;
  margin-bottom: line-height(0);
}

%panel-body {

  @include clearfix();

  padding: $panel-body-padding;
}

%panel-heading {
  border-bottom: $panel-border;
  border-top-left-radius: $panel-border-radius;
  border-top-right-radius: $panel-border-radius;
  padding: $panel-heading-padding;
}

// within heading, strip out any `h*` tag of its default
// margins for spacing
%panel-title {
  color: inherit;
  font-size: type-scale(1);
  margin-bottom: $margin-zero;
  margin-top: $margin-zero;
}

%panel-footer {
  background-color: $panel-footer-bg;
  border-bottom-left-radius: $panel-border-radius;
  border-bottom-right-radius: $panel-border-radius;
  border-top: $base-unit solid $panel-inner-border;
  padding: $panel-footer-padding;
}

%panel-group {

  margin-bottom: line-height(-2);

  .panel {

    border-radius: $panel-border-radius;
    margin-bottom: line-height(-2);

    .panel {
      margin-top: line-height(-4);
    }
  }

  .panel-heading {

    border-bottom: 0;

    .panel-collapse > .panel-body {
      border-top: $base-unit;
    }
  }

  .panel-footer {

    border-top: 0;

    .panel-collapse .panel-body {
      border-bottom: $panel-border;
    }
  }
}

%column {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-left: map-get($grid-config, 'half-gutter-width');
  padding-right: map-get($grid-config, 'half-gutter-width');
}

// ## Code Placeholders
// ### Inline and block
%code,
%kbd,
%pre,
%samp {
  font-family: font-stack('code');
}

// Inline code
%code {
  background-color: $code-bg-color;
  border-radius: $border-radius-base;
  color: $code-color;
  font-size: $code-font-size;
  padding: $code-padding;
}

// User input typically entered via keyboard
%kbd {
  background-color: $code-bg-color;
  border-radius: $border-radius-base;
  box-shadow: $component-box-shadow;
  color: $code-color;
  font-size: $code-font-size;
  padding: $code-padding;

  kbd {
    box-shadow: none;
    font-size: 100%;
    font-weight: font-weight('bold');
    padding: $padding-zero;
  }
}

// Blocks of code
%pre {
  background-color: $code-bg-color;
  border: $code-border;
  border-radius: $border-radius-base;
  color: $code-color;
  display: block;
  font-size: $code-font-size;
  line-height: line-height(0);
  margin: 0 0 line-height(-2);
  padding: $code-padding;
  word-break: break-all;
  word-wrap: break-word;

  // Account for some code outputs that place code tags in pre tags
  code {
    background-color: transparent;
    border-radius: 0;
    color: inherit;
    font-size: inherit;
    padding: $padding-zero;
    white-space: pre-wrap;
  }
}

// Enable scrollable blocks of code
%pre-scrollable {
  max-height: $pre-scrollable-max-height;
  overflow-y: scroll;
}
